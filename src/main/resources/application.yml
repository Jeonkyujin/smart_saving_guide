spring:

  profiles:
    active: local

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${redirect.kakaoUrl}
            client-authentication-method: client_secret_post # kakao? ?? ?? ?? ?? ???? post??. (?? ???? ?? ??? ??? ????.)
            authorization-grant-type: authorization_code
            scope: # kakao ?? ?? ?? ?? ??? ID ?
              - profile_nickname
              - account_email
              - profile_image
            client-name: kakao
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid, email, profile
            redirect-uri: ${redirect.googleUrl}
            authorization-grant-type: authorization_code
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${redirect.naverUrl}
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profile_image

            client-name: naver

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: id

token:
  key: ${SECRET_KEY}
  access:
    expiration: ${JWT_ACCESS_TOKEN_EXPIRATION}
    header: Authorization
  refresh:
    expiration: ${JWT_REFRESH_TOKEN_EXPIRATION}
    cookie:
      name: refreshToken